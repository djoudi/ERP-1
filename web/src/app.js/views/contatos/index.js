// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'underscore', 'backbone', 'collections/contatos', 'text!templates/contatos/index.html', 'text!templates/contatos/index-item.html'], function($, _, Backbone, Contatos, ContatosIndexTemplate, ContatosIndexItemTemplate) {
    var ContatoIndexView, ContatosIndexView;
    ContatoIndexView = (function(_super) {

      __extends(ContatoIndexView, _super);

      function ContatoIndexView() {
        return ContatoIndexView.__super__.constructor.apply(this, arguments);
      }

      ContatoIndexView.prototype.tagName = "tr";

      ContatoIndexView.prototype.isSelected = false;

      ContatoIndexView.prototype.template = _.template(ContatosIndexItemTemplate);

      ContatoIndexView.prototype.events = {
        'click td': 'select'
      };

      ContatoIndexView.prototype.render = function() {
        this.$el.html(this.template({
          contato: this.model.toJSON(),
          emails: this.model.get("emails").toJSON(),
          enderecos: this.model.get("enderecos").toJSON(),
          telefones: this.model.get("telefones").formatFromRaw()
        }));
        this.input = this.$("input");
        return this;
      };

      ContatoIndexView.prototype.toggleSelection = function(toState) {
        if (toState == null) {
          toState = !this.isSelected;
        }
        this.input.prop("checked", this.isSelected = !this.isSelected);
        this.$el.toggleClass("selected", this.isSelected);
        if (this.isSelected) {
          this.trigger("selected", this);
        } else {
          this.trigger("unselected", this);
        }
        return this.trigger("change:selection", this);
      };

      ContatoIndexView.prototype.select = function() {
        return this.toggleSelection(true);
      };

      ContatoIndexView.prototype.unselect = function() {
        return this.toggleSelection(false);
      };

      return ContatoIndexView;

    })(Backbone.View);
    return ContatosIndexView = (function(_super) {

      __extends(ContatosIndexView, _super);

      function ContatosIndexView() {
        return ContatosIndexView.__super__.constructor.apply(this, arguments);
      }

      ContatosIndexView.prototype.template = _.template(ContatosIndexTemplate);

      ContatosIndexView.prototype.events = {
        'click [data-action="edit"]': "edit",
        'click [data-action="remove"]': "remove"
      };

      ContatosIndexView.prototype.initialize = function(options) {
        var _this = this;
        ContatosIndexView.__super__.initialize.call(this, options);
        if (!(this.collections != null)) {
          this.collection = new Contatos([]);
        }
        this.selected = new Backbone.Collection;
        this.collection.on("add", this.addOne, this);
        this.collection.on("reset", this.addAll, this);
        this.collection.on("all", this.render, this);
        this.selected.on("all", function() {
          _this.editButton.toggleClass("disabled", !Boolean(_this.selected.length));
          return _this.removeButton.toggleClass("disabled", !Boolean(_this.selected.length));
        });
        return this.collection.fetch();
      };

      ContatosIndexView.prototype.getSelected = function() {
        return this.selected;
      };

      ContatosIndexView.prototype.edit = function() {
        if (!this.selected.length) {
          return;
        }
        return this.trigger("edit", this.selected.first());
      };

      ContatosIndexView.prototype.remove = function() {
        if (!this.selected.length) {
          return;
        }
        return this.trigger("remove", this.selected.first());
      };

      ContatosIndexView.prototype.addOne = function(contato) {
        var contatoView,
          _this = this;
        contatoView = new ContatoIndexView({
          model: contato
        });
        contatoView.on('selected', function(contato) {
          return _this.selected.add(contato.model);
        });
        contatoView.on('unselected', function(contato) {
          return _this.selected.remove(contato.model);
        });
        return this.$(".contatos").append(contatoView.render().el);
      };

      ContatosIndexView.prototype.addAll = function() {
        return this.collection.each(this.addOne, this);
      };

      ContatosIndexView.prototype.render = function() {
        this.$el.html(this.template());
        this.addAll();
        this.editButton = this.$("[data-action='edit']");
        this.removeButton = this.$("[data-action='remove']");
        return this;
      };

      return ContatosIndexView;

    })(Backbone.View);
  });

}).call(this);
