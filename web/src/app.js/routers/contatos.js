// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'underscore', 'backbone', 'views/appview', 'collections/contatos', 'views/contatos/index', 'views/contatos/editor'], function($, _, Backbone, AppView, Contatos, ContatosIndexView, ContatoEditorView) {
    var ContatosRouter, newRoute, routes;
    newRoute = __('NEW_CONTACT_ROUTE', 'novo');
    routes = {};
    routes["" + newRoute] = "new";
    routes[""] = "index";
    routes["/"] = "index";
    routes[":id"] = "edit";
    return ContatosRouter = (function(_super) {

      __extends(ContatosRouter, _super);

      function ContatosRouter() {
        return ContatosRouter.__super__.constructor.apply(this, arguments);
      }

      ContatosRouter.prototype.routes = routes;

      ContatosRouter.prototype.contatos = new Contatos();

      ContatosRouter.prototype.index = function() {
        var _this = this;
        if ((AppView.view != null) && AppView.view.constructor.name === "ContatosIndexView") {
          return;
        }
        AppView.setView("Contatos", new ContatosIndexView({
          collection: this.contatos
        }));
        AppView.view.on("edit", function(contato) {
          return _this.navigate("" + _this.prefix + "/" + contato.id, {
            trigger: true
          });
        });
        return AppView.view.on("remove", function(contato) {
          _this.contatos.remove(contato);
          return contato.destroy();
        });
      };

      ContatosRouter.prototype["new"] = function() {
        var editor,
          _this = this;
        if (!AppView.view || (AppView.view != null) && AppView.view.constructor.name === !"ContatosIndexView") {
          this.index();
        }
        editor = new ContatoEditorView({
          model: new this.contatos.model()
        });
        editor.$el.on("hidden", function() {
          return _this.navigate("" + _this.prefix + "/");
        });
        return editor.render();
      };

      ContatosRouter.prototype.edit = function(contato) {
        var _this = this;
        if (!_.isObject(contato)) {
          contato = new this.contatos.model({
            id: contato
          });
        }
        if (!AppView.view || (AppView.view != null) && AppView.view.constructor.name === !"ContatosIndexView") {
          this.index();
        }
        return contato.fetch({
          success: function() {
            var editor;
            editor = new ContatoEditorView({
              model: contato
            });
            editor.$el.on("hidden", function() {
              return _this.navigate("" + _this.prefix + "/");
            });
            return editor.render();
          }
        });
      };

      return ContatosRouter;

    })(Backbone.SubRoute);
  });

}).call(this);
