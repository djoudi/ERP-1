// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'underscore', 'backbone', 'sprintf', 'views/appview', 'subroute', 'routers/contatos'], function($, _, Backbone, sprintf, AppView) {
    var CoreRouter;
    return CoreRouter = (function(_super) {

      __extends(CoreRouter, _super);

      function CoreRouter() {
        return CoreRouter.__super__.constructor.apply(this, arguments);
      }

      CoreRouter.prototype.routes = {
        '': 'index',
        ':router(/*path)': 'loadModuleRouter'
      };

      CoreRouter.prototype.subRouters = {};

      CoreRouter.prototype.index = function() {
        return this.navigate("contatos/", {
          trigger: true
        });
      };

      CoreRouter.prototype.initialize = function() {
        CoreRouter.__super__.initialize.call(this);
        this.setResponseCatchers();
        Backbone.history.start();
        return AppView.render().$el.appendTo("body");
      };

      CoreRouter.prototype.loadModuleRouter = function(routerBase) {
        var routerBaseName,
          _this = this;
        routerBase = routerBase.toLowerCase();
        routerBaseName = routerBase.substr(0, 1).toUpperCase() + routerBase.substr(1).toLowerCase();
        if (routerBase !== "core") {
          return require(["routers/" + routerBase], function(Router) {
            console.log(sprintf("Starting router %1$s ...", routerBaseName));
            return (new Router(routerBase)).on("routeNotFound", _this.handleError, _this);
          });
        }
      };

      CoreRouter.prototype.setResponseCatchers = function() {
        var _this = this;
        return $.ajaxSetup({
          statusCode: {
            401: function() {
              return _this.navigate("login", {
                trigger: true
              });
            }
          }
        });
      };

      return CoreRouter;

    })(Backbone.Router);
  });

}).call(this);
