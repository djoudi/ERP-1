// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['underscore', 'backbone'], function(_, Backbone) {
    /*
    	#	Model do Telefone
    */

    var Telefone;
    Telefone = (function(_super) {

      __extends(Telefone, _super);

      function Telefone() {
        return Telefone.__super__.constructor.apply(this, arguments);
      }

      return Telefone;

    })(Backbone.Model);
    Telefone.format = {
      fromRaw: function(rawData) {
        var length, numero;
        length = rawData.numero.length;
        numero = "";
        if (length > 8) {
          numero += "(" + rawData.numero.substr(0, length - 8) + ") ";
          if (length > 7) {
            numero += rawData.numero.substr(length - 8, 4) + "-" + rawData.numero.substr(length - 4);
          } else {
            numero = rawData.numero;
          }
        }
        rawData.numero = numero;
        return rawData;
      },
      toRaw: function(formattedData) {
        if (_.isString(formattedData)) {
          return formattedData.replace(/[^0-9]*/g, "");
        }
        formattedData.numero = formattedData.numero.replace(/[^0-9]*/g, "");
        return formattedData;
      }
    };
    Telefone.prototype.formatToRaw = function() {
      return Telefone.format.toRaw(this.toJSON());
    };
    Telefone.prototype.formatFromRaw = function() {
      return Telefone.format.fromRaw(this.toJSON());
    };
    return Telefone;
  });

}).call(this);
