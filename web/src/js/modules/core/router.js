// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'underscore', 'backbone', 'subroute'], function($, _, Backbone) {
    var AppRouter;
    return AppRouter = (function(_super) {

      __extends(AppRouter, _super);

      function AppRouter() {
        this.handleError = __bind(this.handleError, this);
        return AppRouter.__super__.constructor.apply(this, arguments);
      }

      AppRouter.prototype.initialize = function() {
        var _this = this;
        AppRouter.__super__.initialize.call(this);
        $.ajaxSetup({
          statusCode: {
            401: function() {}
          }
        });
        return this.navigate("login", {
          trigger: true
        });
      };

      AppRouter.prototype.subRouters = {};

      AppRouter.prototype.routes = {
        ":module(/*path)": 'loadModuleRouter'
      };

      AppRouter.prototype.loadModuleRouter = function(module, subRoute) {
        var _this = this;
        module = module.toLowerCase();
        if (!(this.subRouters[module] != null) && module !== "core") {
          return require(["modules/" + module + "/router"], function(SubRouter) {
            console.log("Módulo " + (module.substr(0, 1).toUpperCase() + module.substr(1).toLowerCase()) + " acionado");
            return _this.subRouters[module] = new SubRouter(module);
          }, function(error) {
            console.error("Módulo " + (module.substr(0, 1).toUpperCase() + module.substr(1).toLowerCase()) + " não foi encontrado");
            return _this.handleError(error);
          });
        }
      };

      AppRouter.prototype.handleError = function(error) {
        return console.log(error);
      };

      return AppRouter;

    })(Backbone.Router);
  });

}).call(this);
